# 01 perlについて

# 概要
# - テキスト処理から大規模システム
# - 自由度が高い書き方 短縮された記述が多くわけがわからない
# - コミュニティが活発 拡張モジュール
#
# 公式サイト
# - perl.org
# - version6系もあるが、広く
#
# 知識
# - 正規表現が得意
# 環境
# - perl_lessons
# - version 5.8.8
# - 多くのレンサバなどで標準で入っている

# Perlの公式サイトはこちらになります。
# http://www.perl.org/
# ドキュメントはいろいろありますが、概要をざっと知りたい方にはperlintroがおすすめです。
# http://perldoc.perl.org/perlintro.html
# ドキュメントの一覧はこちらから。
# http://perldoc.perl.org/perl.html

# 02 はじめてのperlプログラム

# 最近のperlで推奨されているおまじない、正しいプログラムを書けるようにしてくれる
use strict; # 文法の厳密なチェックを行う
use warnings; # 警告を出す

print("hello wolrd\n");
print "hello wolrd\n"; # ()は省略可能

# ソースコードに日本語を記述する場合は冒頭に次の宣言もしておきましょう。
# use utf8;

# 03.スカラー変数を使ってみよう

# 変数：データ(スカラー値、配列、ハッシュ)につけるラベル
# スカラー(単一の値：数値、文字列)
# - 変数 : 一文字目 $ 二文字目 _か英数字

my $msg;
$msg = "hello wolrd variable\n";

print $msg;

# 04. 数値を扱ってみよう

my $x =10;
my $y = 10.7; # 小数
my $z = 123235235;
my $z2 = 123_235_235; # "_"を含めても無視される、見やすくする書き方

# 演算子
# = 代入演算子
# + - / *

my $xx = 10 * 10; # 100
my $yy = 10 % 3; # 1 余り
my $zz = 2 ** 3; # 8　ぺき乗

# ++ --
$x++; # 11 1を足す
$x--; # 10 1を引く

# += 代入をともなう演算子
$x += 5; # 15 $x = $x + 5の別の書き方
$x -= 5; # 10  差もできる

print $x . "\n";

# 05.文字列を扱ってみよう

# スカラー変数 文字rつ

my $a = "he\tllo"; # 変数展開 \n(改行) \t(tab)
my $b = 'he\tllo'; # 変数展開しない

print $a;

# .(ピリオド)
print "mon" . "san"; # 文字列の連結

# x (エックス)
print  "x" x 5; # 繰り返し
